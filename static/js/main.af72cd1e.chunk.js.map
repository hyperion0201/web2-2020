{"version":3,"sources":["helpers/cookie.js","Configs/index.js","Redux/Action/paymentAction.js","Component/account/index.js","Redux/Action/userAction.js","Component/homepage/index.js","helpers/localStorage.js","Component/login/index.js","Component/signup/index.js","Component/profile/index.js","Component/Header/index.js","Component/transaction/index.js","Component/list_account/index.js","Component/change_password/index.js","Component/transfer/index.js","Component/ForgotPassword/index.js","Component/user_management/UserModal.js","Component/user_management/index.js","App.js","serviceWorker.js","Redux/Reducer/user.js","Redux/Reducer/index.js","Redux/store.js","index.js"],"names":["getCookie","cname","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","decodeURIComponent","isLogin","configs","baseUrl","bankID","window","AppConfigs","baseURL","request","method","url","data","heads","a","headers","Authorization","forEach","header","key","value","axios","json","Account","useState","show","setShow","type","setAccountType","handleClose","Button","variant","className","onClick","Modal","onHide","Header","closeButton","Title","onSubmit","event","preventDefault","createAccount","currency","FormData","target","get","account_type","then","res","status","toast","success","catch","err","error","Body","ButtonGroup","toggle","aria-required","ToggleButton","defaultChecked","id","onChange","e","currentTarget","Form","Label","htmlFor","Control","as","custom","Footer","register","getUserInfo","getListAccount","MainOuter","AboutBank","src","alt","FinancialStatistics","Optional","icon","title","description","map","item","class","Homepage","useEffect","user","localStorage","setItem","JSON","stringify","Login","Container","component","maxWidth","CssBaseline","Avatar","Typography","formData","login","username","password","timeSet","timeEp","expires","Date","setTime","getTime","encodeURIComponent","toUTCString","setCookie","_","location","replace","noValidate","TextField","margin","required","fullWidth","label","autoFocus","autoComplete","color","Grid","container","xs","Link","href","Signup","setError","handleSubmit","fullName","email","identity_type","identity_id","direction","justify","alignItems","FormControl","InputLabel","Select","MenuItem","ListItemLink","props","ListItem","button","ModalUpload","modal","setModal","fileUpload","setFileUpload","ListItemIcon","ListItemText","primary","open","onClose","Fade","in","fileSource","height","width","file","identify","console","log","startIcon","accept","hidden","multiple","files","fileReader","FileReader","onload","result","fileName","readAsDataURL","Profile","identity_image_url","role","createdAt","updatedAt","setUser","persons","showProfile","setState","toggleDrawer","anchor","Fragment","Drawer","List","aria-label","headerRef","useRef","pathname","includes","current","classList","add","remove","ref","clear","Transaction","accountSelected","listTransaction","setListTransaction","account_id","today","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","random","Table","responsive","striped","bordered","tran","deposit_account_id","action","amount","date","receive_account_id","receive_name","deposit_name","List_account","isModal","selectedItem","isStaff","accounts","setAccounts","showTransHistory","setShowTransHistory","setAccountSelected","getAccountByStaff","handleGetListAccount","getListAccountByStaff","handleLockAccount","handleUnlockAccount","size","Tabs","Tab","eventKey","hover","account","account_balance","handleShowTransHistory","active","interest_rate","term","maturity_date","Change_password","oldPass","newPass","changepassword","Transfer","listAccount","setListAccount","list","filter","useForm","errors","reset","receiveBankID","transferMoney","min","validate","ForgotPassword","forgotpassword","endIcon","Icon","UserModal","onSave","setStatus","Group","Row","column","sm","Col","readOnly","defaultValue","User_Management","listUser","setListUser","showUserProfile","setShowUserProfile","showManageAccount","setShowManageAccount","selectedUser","setSelectedUser","searchKey","setSearchKey","debounceGetUser","useCallback","debounce","query","onChangeSearchBox","closeManageAccount","payload","editUser","message","PrivateRoute","Component","rest","render","to","PublicRoute","AdminRoute","restricted","App","parse","getItem","path","exact","Boolean","hostname","match","initialState","state","assign","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","configure","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af72cd1e.chunk.js","sourcesContent":["export const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var ca = document.cookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      if (\n        c.substring(name.length, c.length) &&\n        c.substring(name.length, c.length) !== \"null\"\n      ) {\n        return decodeURIComponent(c.substring(name.length, c.length));\n      }\n    }\n  }\n  return null;\n};\n\nexport const setCookie = (key, value, timeSet) => {\n  let timeDefault = 1000 * 60 * 24 * 30 * 365;\n  let timeEp = timeSet ? timeSet : timeDefault;\n  let expires = new Date();\n  expires.setTime(expires.getTime() + timeEp);\n  document.cookie =\n    key +\n    \"=\" +\n    encodeURIComponent(value) +\n    \";expires=\" +\n    expires.toUTCString() +\n    \";path=/;\";\n};\n\nexport const removeCookie = (name) => {\n  document.cookie = name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n};\n\nexport const isLogin = () => {\n  return getCookie(\"user_token\");\n}","const configs = {\n  baseUrl: \"https://web2-be.herokuapp.com/\",\n  bankID: \"VNBC\",\n};\n\nwindow.AppConfigs = configs;\n\nexport default configs;\n","import axios from \"axios\";\nimport configs from \"../../Configs\";\nimport { getCookie } from \"../../helpers/cookie\";\n\nconst baseURL = configs.baseUrl;\n\nconst request = async (method, url, data, heads) => {\n  let headers = { Authorization: `Bearer ${getCookie(\"user_token\")}` };\n  heads && heads.forEach((header) => (headers[header.key] = header.value));\n  return axios({\n    method,\n    url: baseURL + url,\n    json: true,\n    ...data,\n    headers,\n  });\n};\n\nexport const createAccount = (data) => {\n  return request(\"POST\", \"account\", { data });\n};\n\nexport const getListTransaction = (id) => {\n  return request(\"GET\", `transaction/transaction-history?accountId=${id}`);\n};\n\nexport const transferMoney = (data) => {\n  return request(\"POST\", \"transaction/transfer\", { data });\n};\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport {\n  Button,\n  Modal,\n  ButtonGroup,\n  ToggleButton,\n  Form,\n} from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { createAccount } from \"../../Redux/Action/paymentAction\";\nfunction Account() {\n  const [show, setShow] = useState(false);\n  const [type, setAccountType] = useState(\"spending\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = {\n      currency: formData.get(\"currency\"),\n      account_type: type,\n    };\n    createAccount(data)\n      .then((res) => {\n        if (res.status === 200) {\n          handleClose();\n          toast.success(\"Create bank account successfully!\");\n        }\n      })\n      .catch((err) => {\n        handleClose();\n        toast.error(\"Create bank account unsuccessfully\");\n      });\n  };\n  return (\n    <div>\n      <Button variant=\"primary\" className=\"order-btn\" onClick={handleShow}>\n        Create Card\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Choose an account type to create </Modal.Title>\n        </Modal.Header>\n\n        <form onSubmit={handleSubmit}>\n          <Modal.Body>\n            <ButtonGroup toggle className=\"mb-3\" aria-required>\n              <ToggleButton\n                type=\"checkbox\"\n                defaultChecked\n                value=\"spending\"\n                name=\"spending\"\n                id=\"spending\"\n                className=\"label-name\"\n                onChange={(e) => setAccountType(e.currentTarget.value)}\n              >\n                Spending Account\n              </ToggleButton>\n              <br></br>\n              <ToggleButton\n                type=\"checkbox\"\n                value=\"saving\"\n                name=\"saving\"\n                id=\"saving\"\n                className=\"label-name\"\n                onChange={(e) => setAccountType(e.currentTarget.value)}\n              >\n                Saving Account\n              </ToggleButton>\n            </ButtonGroup>\n            <Form.Label\n              className=\"my-1 mr-2 text-center\"\n              htmlFor=\"inlineFormCustomSelectPref\"\n            >\n              <b>Currency</b>\n            </Form.Label>\n            <Form.Control\n              as=\"select\"\n              className=\"my-1 mr-sm-2\"\n              id=\"inlineFormCustomSelectPref\"\n              name=\"currency\"\n              custom\n            >\n              <option value=\"VND\">VND</option>\n              <option value=\"USD\">USD</option>\n            </Form.Control>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Account;\n","import axios from \"axios\";\nimport configs from \"../../Configs\";\nimport { getCookie } from \"../../helpers/cookie\";\n\nconst baseURL = configs.baseUrl;\n\nconst request = async (method, url, data, heads) => {\n  let headers = { Authorization: `Bearer ${getCookie(\"user_token\")}` };\n  heads && heads.forEach((header) => (headers[header.key] = header.value));\n  return axios({\n    method,\n    url: baseURL + url,\n    json: true,\n    ...data,\n    headers,\n  });\n};\n\nexport const login = (data) => {\n  return request(\"POST\", \"login\", { data });\n};\n\nexport const register = (data) => {\n  return request(\"POST\", \"register\", { data });\n};\n\nexport const changepassword = (data) => {\n  return request(\"POST\", \"user/changePassword\", { data });\n};\n\nexport const forgotpassword = (data) => {\n  return request(\"POST\", \"user/forgotPassword\", { data });\n};\n\nexport const getUserInfo = () => {\n  return request(\"GET\", \"user\");\n};\n\nexport const verifyUser = (data) => {\n  const heads = [{ key: \"Content-Type\", value: \"multipart/formdata\" }];\n  return request(\"POST\", \"user/verify\", { data }, heads);\n};\n\nexport const getListAccount = () => {\n  return request(\"GET\", \"account\");\n};\n\n//redux action\nexport const setUserInfo = async () => {\n  const info = await getUserInfo();\n};\n\nexport const lockAccount = (data) => {\n  return request(\"POST\", \"account/deactivate\", { data });\n};\nexport const unlockAccount = (data) => {\n  return request(\"POST\", \"account/activate\", { data });\n};\n\nexport const getAllUser = (query) => {\n  return request(\"POST\", \"user/all\", { data: { query } });\n};\n\nexport const editUser = (payload) => {\n  const { data, id } = payload;\n  return request(\"PUT\", `user/update-user?userId=${id}`, { data });\n};\n\nexport const getListAccountByStaff = (id) => {\n  return request(\"GET\", `account?userId=${id}`);\n};\n","import React, { useEffect } from \"react\";\nimport \"./style.scss\";\nimport CreateAccount from \"../account\";\nimport { getUserInfo } from \"../../Redux/Action/userAction\";\nimport { setStorage } from \"../../helpers/localStorage\";\n\nfunction Homepage() {\n  useEffect(() => {\n    getUserInfo().then((res) => {\n      const { data } = res;\n      data && setStorage(\"user\", data.user);\n    });\n  }, []);\n\n  return (\n    <div className=\"homepage\">\n      <MainOuter />\n      <AboutBank />\n      <FinancialStatistics />\n      <Optional />\n    </div>\n  );\n}\n\nconst MainOuter = () => {\n  return (\n    <div className=\"main-outer\">\n      <div className=\"main-insider\">\n        <h3>The Fastest Way to Send Money Worldwide</h3>\n        <div className=\"order-group\">\n          <CreateAccount />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AboutBank = () => {\n  return (\n    <div className=\"my-container about-bank\">\n      <h5>A Few Words About Our Bank</h5>\n      <p className=\"subtitle\">\n        Bank Progress was founded in 1999 to introduce the new level of\n        financial services worldwide. We are still dedicated to the success of\n        our clients, both individual and corporate.\n      </p>\n      <div className=\"info\">\n        <img\n          className=\"info-item img\"\n          src=\"https://livedemo00.template-help.com/wt_prod-20154/images/index-1-2-570x379.jpg\"\n          alt=\"\"\n        />\n        <p className=\"info-item description\">\n          At Bank Progress, we are guided by a common purpose to help make\n          financial lives better by connecting clients and communities to the\n          resource they need to be successful. We are driving growth – helping\n          to create jobs, develop communities, foster economic mobility and\n          address society’s biggest challenges – while managing risk and\n          providing a return to our clients and our shareholders.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst FinancialStatistics = () => {\n  return (\n    <div className=\"financial\">\n      <div className=\"my-container statistic\">\n        <h4 className=\"title\">Financial Statistics</h4>\n        <div className=\"info\">\n          <div className=\"item content\">\n            <p className=\"quote\">\n              <i>\n                \"At Bank Progress, we aim to provide top quality banking\n                services to a greater number of individual and corporate\n                customers than any other bank in the USA or abroad. Our clients\n                value data privacy and security of their banking accounts 24/7.\"\n              </i>\n            </p>\n            <div className=\"ceo\">\n              <p className=\"author\">Minh Hieu Hoang</p>\n              <p className=\"position\">CEO & Founder of VNBC Bank</p>\n            </div>\n          </div>\n          <div className=\"item\">\n            <img className=\"img\" src=\"/images/img3.jpg\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Optional = () => {\n  const listOption = [\n    {\n      icon: \"location_city\",\n      title: \"Various Locations\",\n      description:\n        \"We have offices in many countries including the USA and the UK.\",\n    },\n    {\n      icon: \"phone_android\",\n      title: \"Mobile Banking Apps\",\n      description:\n        \"Get instant access to your account on any device using our banking apps.\",\n    },\n    {\n      icon: \"person_pin\",\n      title: \"Family & Friends Programs\",\n      description:\n        \"Our Bank has special programs with benefits for family members.\",\n    },\n    {\n      icon: \"perm_phone_msg\",\n      title: \"24/7 Support\",\n      description:\n        \"Our Support team is always ready to help you solve any banking issues.\",\n    },\n    {\n      icon: \"event_note\",\n      title: \"Personal Profile\",\n      description:\n        \"Register your free personal profile online to begin using our services.\",\n    },\n    {\n      icon: \"settings\",\n      title: \"Settings\",\n      description:\n        \"Registered clients can edit the banking account settings in 2 clicks.\",\n    },\n  ];\n\n  return (\n    <div className=\"my-container optional\">\n      <h3 className=\"title\">The Best Banking Choice</h3>\n      <p className=\"description\">\n        Since our foundation, we have been #1 banking institution for lots of\n        individual and corporate customers, both in the USA and internationally.\n        We provide our clients with a number of benefits.\n      </p>\n      <div className=\"list-option\">\n        {listOption.map((item) => (\n          <div key={item.title} className=\"option\">\n            <i class=\"material-icons icon\">{item.icon}</i>\n            <p className=\"item-title\">{item.title}</p>\n            <p className=\"item-description\">{item.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","export const getStorage = (name) => {\n  return JSON.parse(localStorage.getItem(name));\n};\n\nexport const setStorage = (name, value) => {\n  return localStorage.setItem(name, JSON.stringify(value));\n};\n","import React from \"react\";\nimport \"./style.scss\";\nimport { login } from \"../../Redux/Action/userAction\";\nimport _ from \"lodash\";\nimport { setCookie } from \"../../helpers/cookie\";\nimport { toast } from \"react-toastify\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Link,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nfunction Login() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = {\n      username: formData.get(\"username\"),\n      password: formData.get(\"password\"),\n    };\n    login(data)\n      .then((res) => {\n        if (res.status === 200) {\n          const token = _.get(res, \"data.token\");\n          setCookie(\"user_token\", token);\n          window.location.replace(\"/\");\n        }\n      })\n      .catch((err) => toast.error(\"Email/Username or Password is incorrect\"));\n  };\n  return (\n    <div className=\"login\">\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className=\"paper\">\n          <Avatar>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form onSubmit={handleSubmit} className=\"form\" noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"submit\"\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid className=\"link-fogotPassword\" item xs>\n                <Link href=\"/forgot-password\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { register } from \"../../Redux/Action/userAction\";\nimport { toast } from \"react-toastify\";\nimport {\n  Select,\n  MenuItem,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Typography,\n  Container,\n  FormControl,\n  InputLabel\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { get } from \"lodash\";\n\nfunction Signup() {\n  const [error, setError] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = {\n      fullName: formData.get(\"fullName\"),\n      email: formData.get(\"email\"),\n      username: formData.get(\"username\"),\n      password: formData.get(\"password\"),\n      identity_type: formData.get(\"identity_type\"),\n      identity_id: formData.get(\"identity_id\"),\n    };\n    if (formData.get(\"password\") !== formData.get(\"confirmPassword\")) {\n      setError(true);\n      return;\n    } else setError(false);\n    register(data).then((res) => {\n      if (get(res, \"data.error\")) toast.error(get(res, \"data.error\"));\n      else if (res.status === 200) {\n        toast.success(\"🦄 Create account successfully\");\n        window.location.replace(\"/login\");\n      }\n    });\n  };\n  return (\n    <div className=\"sign-up-form\">\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className=\"paper\">\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form onSubmit={handleSubmit} className=\"form\">\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"fullName\"\n              label=\"Full Name\"\n              name=\"fullName\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item xs=\"3\">\n                <FormControl variant=\"outlined\" className=\"type-identity\">\n                  <InputLabel id=\"identity_type\">\n                    Type\n                  </InputLabel>\n                  <Select\n                    id=\"identity_type\"\n                    label=\"Age\"\n                    name=\"identity_type\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value=\"cmnd\">CMND</MenuItem>\n                    <MenuItem value=\"cccd\">CCCD</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs=\"9\">\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"identity_id\"\n                  label=\"Identity ID\"\n                  name=\"identity_id\"\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"confirmPassword\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              id=\"confirmPassword\"\n              autoComplete=\"current-password\"\n            />\n            {error && (\n              <p className=\"error\">\n                Confirm password does not match with password\n              </p>\n            )}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"submit\"\n            >\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport { verifyUser, getUserInfo } from \"../../Redux/Action/userAction\";\n\nimport List from \"@material-ui/core/List\";\n\nimport Modal from \"@material-ui/core/Modal\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport BrandingWatermarkIcon from \"@material-ui/icons/BrandingWatermark\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nfunction Profile() {\n  const [user, setUser] = useState({\n    id: null,\n    username: \"\",\n    email: \"\",\n    fullName: \"\",\n    password: \"\",\n    status: \"\",\n    identity_type: \"\",\n    identity_id: \"\",\n    identity_image_url: null,\n    role: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n  });\n\n  useEffect(() => {\n    getUserInfo()\n      .then((res) => {\n        const persons = res.data;\n        setUser(persons.user);\n      })\n      .catch((err) => {\n        console.log(\"err: \", err);\n      });\n  }, []);\n\n  const [showProfile, setState] = useState(false);\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...showProfile, [anchor]: open });\n  };\n\n  return (\n    <div>\n      <React.Fragment key=\"left\">\n        <Button onClick={toggleDrawer(\"left\", true)}>Profile</Button>\n        <Drawer\n          anchor=\"left\"\n          open={showProfile[\"left\"]}\n          onClose={toggleDrawer(\"left\", false)}\n        >\n          <div className=\"profile\">\n            <div className=\"list\" role=\"presentation\">\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem>\n                  {user.status === \"verify\" ? (\n                    <img\n                      className=\"icon-user\"\n                      src=\"/images/user-verify.svg\"\n                      alt=\"\"\n                    ></img>\n                  ) : (\n                    <img\n                      className=\"icon-user\"\n                      src=\"/images/user-unverified.svg\"\n                      alt=\"\"\n                    ></img>\n                  )}\n                </ListItem>\n                <ListItem className=\"username\">\n                  <ListItemText primary={user.username} />\n                </ListItem>\n                {user.status === \"unverified\" && (\n                  <ListItem className=\"username\">\n                    <p>\n                      Your account is not activated yet, please upload your ID\n                      photo to activate.\n                    </p>\n                  </ListItem>\n                )}\n                {user.status === \"unverified\" && <ModalUpload />}\n                <ListItem>\n                  <ListItemIcon>\n                    <EmailIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={user.email} />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <AccountCircleIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={user.fullName} />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <BrandingWatermarkIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={user.identity_id} />\n                </ListItem>\n                <ListItemLink href=\"/user/changePassword\">\n                  <ListItemIcon>\n                    <LockIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Change password\" />\n                </ListItemLink>\n              </List>\n            </div>\n          </div>\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n\nconst ModalUpload = () => {\n  const [modal, setModal] = useState(false);\n  const handleOpenModal = () => {\n    setModal(true);\n  };\n  const handleCloseModal = () => {\n    setModal(false);\n  };\n  const [fileUpload, setFileUpload] = useState(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n  };\n\n  const onUploadImage = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const fileSource = fileReader.result;\n      setFileUpload({\n        file: file,\n        fileName: file.name,\n        type: \"IMAGE\",\n        fileSource,\n      });\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n  const verifyAccount = () => {\n    if (!fileUpload) return;\n    verifyUser({ identify: fileUpload.fileSource })\n      .then((res) => {\n        console.log(\"res: \", res);\n      })\n      .catch((err) => {\n        console.log(\"err: \", err);\n      });\n  };\n  return (\n    <div>\n      <ListItem button onClick={handleOpenModal}>\n        <ListItemIcon>\n          <AddAPhotoIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Upload photo\" />\n      </ListItem>\n\n      <Modal className=\"modal-upload\" open={modal} onClose={handleCloseModal}>\n        <Fade in={modal}>\n          <div className=\"paper\">\n            <h2>Upload identification photo</h2>\n            <Grid>\n              <Grid item xs={12}>\n                {fileUpload && (\n                  <img\n                    src={fileUpload.fileSource}\n                    height=\"50%\"\n                    width=\"50%\"\n                    alt={fileUpload.file.name}\n                  />\n                )}\n              </Grid>\n\n              {fileUpload && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={verifyAccount}\n                  startIcon={<SendIcon />}\n                  className=\"btn\"\n                >\n                  Verify account\n                </Button>\n              )}\n              <input\n                accept=\"image/*\"\n                hidden\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={onUploadImage}\n              />\n\n              <label htmlFor=\"contained-button-file\">\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<CloudUploadIcon />}\n                  component=\"span\"\n                  className=\"btn\"\n                >\n                  Choose image ...\n                </Button>\n              </label>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport { getCookie, removeCookie } from \"../../helpers/cookie\";\nimport Profile from \"../profile\";\nimport { get } from \"lodash\";\nimport { getUserInfo } from \"../../Redux/Action/userAction\";\n\nconst Header = () => {\n  const [user, setUser] = useState({});\n  const headerRef = useRef();\n\n  const isLogin = getCookie(\"user_token\");\n  const pathname = get(window, \"location.pathname\");\n\n  useEffect(() => {\n    getUserInfo().then((res) => {\n      const { data } = res;\n      data && setUser(data.user);\n    });\n    if ([\"/login\", \"/register\"].includes(pathname)) {\n      headerRef.current.classList.add(\"transparent-header\");\n    } else {\n      headerRef.current.classList.remove(\"transparent-header\");\n    }\n  }, [pathname]);\n\n  const handleLogout = () => {\n    removeCookie(\"user_token\");\n    localStorage.clear();\n    window.location.replace(\"/login\");\n  };\n\n  return (\n    <div ref={headerRef} className=\"header\">\n      <div className=\"header-nav\">\n        <div className=\"nav-bar\">\n          <img\n            className=\"logo\"\n            onClick={() => window.location.replace(\"/\")}\n            src=\"/images/logo.png\"\n            alt=\"\"\n          />\n          {!isLogin ? (\n            <div className=\"link-group\">\n              <a href=\"/login\" className=\"link-btn\">\n                Log in\n              </a>\n              <a href=\"/register\" className=\"link-btn sign-up\">\n                Sign up\n              </a>\n            </div>\n          ) : (\n            <div className=\"link-group\">\n              {user && user.role === \"staff\" && (\n                <a href=\"/user-management\" className=\"link-btn\">\n                  User Management\n                </a>\n              )}\n              <a href=\"/account\" className=\"link-btn\">\n                List accounts\n              </a>\n              <a href=\"/transfer\" className=\"link-btn\">\n                Transfer\n              </a>\n              <Profile />\n              <span onClick={handleLogout} className=\"link-btn\">\n                Log out\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport { Table } from \"react-bootstrap\";\nimport { getListTransaction } from \"../../Redux/Action/paymentAction\";\nimport { get } from \"lodash\";\n\nfunction Transaction({ accountSelected }) {\n  const [listTransaction, setListTransaction] = useState([]);\n\n  useEffect(() => {\n    if (accountSelected) {\n      getListTransaction(accountSelected.account_id).then((res) => {\n        console.log(\"res: \", res);\n        if (res.status === 200) {\n          setListTransaction(get(res, \"data.data\"));\n        }\n      });\n    }\n  }, [accountSelected]);\n\n  const today = new Date();\n  const date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n  const time =\n    today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  const dateTime = date + \" \" + time;\n  const trans = [\n    {\n      id: \"001\",\n      accountNo: Math.floor(1000 + Math.random() * (10000 - 1000)),\n      moneyInto: 500 + \"$\",\n      moneyOut: 0 + \"$\",\n      time: dateTime,\n      guestAccount: Math.floor(1000 + Math.random() * (10000 - 1000)),\n      guestBank: \"TranDan Bank\",\n    },\n    {\n      id: \"002\",\n      accountNo: Math.floor(1000 + Math.random() * (10000 - 1000)),\n      moneyInto: 0 + \"$\",\n      moneyOut: 200 + \"$\",\n      time: dateTime,\n      guestAccount: Math.floor(1000 + Math.random() * (10000 - 1000)),\n      guestBank: \"TranDan Bank\",\n    },\n    {\n      id: \"003\",\n      accountNo: Math.floor(1000 + Math.random() * (10000 - 1000)),\n      moneyInto: 1000 + \"$\",\n      moneyOut: 0 + \"$\",\n      time: dateTime,\n      guestAccount: Math.floor(1000 + Math.random() * (10000 - 1000)),\n      guestBank: \"TranDan Bank\",\n    },\n  ];\n  return (\n    <div className=\"transaction\">\n      <h2>TRANSACTION HISTORY</h2>\n      <Table responsive striped bordered>\n        <thead className=\"header-tab\">\n          <tr>\n            <th>No</th>\n            <th>Action</th>\n            <th>Amount Of Money</th>\n            <th>Date</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Exchange with</th>\n            <th>From (To) Bank </th>\n          </tr>\n        </thead>\n        {listTransaction.map((tran, i) => (\n          <tbody key={`${tran.deposit_account_id}-${i}`} className=\"body\">\n            <tr>\n              <th>{i}</th>\n              <th className=\"action\">{tran.action}</th>\n              <th>{tran.amount}</th>\n              <th>{tran.date}</th>\n              <th>{tran.deposit_account_id}</th>\n              <th>{tran.receive_account_id}</th>\n              <th>{tran.receive_name || tran.deposit_name}</th>\n              <th>VNBC Bank</th>\n            </tr>\n          </tbody>\n        ))}\n      </Table>\n    </div>\n  );\n}\nexport default Transaction;\n","import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport { Tabs, Tab, Table, Button, Modal } from \"react-bootstrap\";\nimport {\n  getListAccount,\n  lockAccount,\n  unlockAccount,\n  getListAccountByStaff,\n} from \"../../Redux/Action/userAction\";\nimport { get } from \"lodash\";\nimport TransactionHistory from \"../transaction\";\nimport { toast } from \"react-toastify\";\n\nfunction List_account({ isModal, handleClose, selectedItem, isStaff }) {\n  const [accounts, setAccounts] = useState([]);\n  const [showTransHistory, setShowTransHistory] = useState(false);\n  const [accountSelected, setAccountSelected] = useState();\n\n  useEffect(() => {\n    if (selectedItem && isStaff) {\n      getAccountByStaff(selectedItem.id);\n    } else handleGetListAccount();\n  }, []);\n  const getAccountByStaff = (id) => {\n    getListAccountByStaff(id).then((res) => {\n      if (res.error) return;\n      const { data } = res;\n      setAccounts(get(data, \"accounts\"));\n    });\n  };\n  const handleGetListAccount = () => {\n    getListAccount().then((res) => {\n      if (res.error) return;\n      const { data } = res;\n      setAccounts(get(data, \"accounts\"));\n    });\n  };\n\n  const handleShowTransHistory = (account) => {\n    setShowTransHistory(true);\n    setAccountSelected(account);\n  };\n\n  const handleLockAccount = (account_id) => {\n    lockAccount({ account_id })\n      .then((res) => {\n        if (res.status === 200) {\n          toast.success(\"Lock account successfully\");\n          handleGetListAccount();\n        }\n      })\n      .catch((err) => {});\n  };\n  const handleUnlockAccount = (account_id) => {\n    unlockAccount({ account_id })\n      .then((res) => {\n        if (res.status === 200) {\n          toast.success(\"Unlock account successfully\");\n          handleGetListAccount();\n        }\n      })\n      .catch((err) => {});\n  };\n\n  return (\n    <div className=\"btn-close-form\">\n      {isModal && (\n        <i className=\"material-icons\" onClick={handleClose}>\n          close\n        </i>\n      )}\n      <Modal\n        show={showTransHistory}\n        onHide={() => setShowTransHistory(false)}\n        size=\"xl\"\n      >\n        <TransactionHistory accountSelected={accountSelected} />\n      </Modal>\n      <div className=\"outermost\">\n        <h1>\n          {selectedItem ? `${selectedItem.fullName} accounts` : \"Your accounts\"}\n        </h1>\n        <Tabs>\n          <Tab\n            eventKey=\"credit-account\"\n            title=\"Credit account\"\n            className=\"tab-table\"\n          >\n            <Table striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"order\">No.</th>\n                  <th>Account number</th>\n                  <th>Account balance</th>\n                  <th className=\"table-transaction\">Transaction history</th>\n                  <th>Date created</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              {accounts.map((account) => (\n                <tbody>\n                  {account.account_type === \"spending\" ? (\n                    <tr>\n                      <td>{account.id}</td>\n                      <td>{account.account_id}</td>\n                      <td>{account.account_balance}</td>\n                      <td>\n                        <Button\n                          variant=\"primary\"\n                          onClick={() => handleShowTransHistory(account)}\n                        >\n                          View transaction history\n                        </Button>\n                      </td>\n                      <td>{account.createdAt}</td>\n                      {account.active ? <td>Active</td> : <td>Block</td>}\n                      <td className=\"un-lock\">\n                        {account.active ? (\n                          <Button\n                            variant=\"danger\"\n                            className=\"btn\"\n                            onClick={() =>\n                              handleLockAccount(account.account_id)\n                            }\n                          >\n                            {\" \"}\n                            Lock{\" \"}\n                          </Button>\n                        ) : (\n                          <Button\n                            variant=\"primary\"\n                            className=\"btn\"\n                            onClick={() =>\n                              handleUnlockAccount(account.account_id)\n                            }\n                          >\n                            Unlock\n                          </Button>\n                        )}\n                      </td>\n                    </tr>\n                  ) : (\n                    <div></div>\n                  )}\n                </tbody>\n              ))}\n            </Table>\n          </Tab>\n          <Tab\n            eventKey=\"saving-account\"\n            title=\"Saving account\"\n            className=\"tab-table\"\n          >\n            <Table striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"order\">No.</th>\n                  <th>Account number</th>\n                  <th>Account balance</th>\n                  <th>Date created</th>\n                  <th>Interest rate</th>\n                  <th>Date active</th>\n                  <th>Status</th>\n                  <th>Term</th>\n                  <th>Date due</th>\n                </tr>\n              </thead>\n              {accounts.map((account) => (\n                <tbody>\n                  {account.account_type === \"saving\" ? (\n                    <tr>\n                      <td>{account.id}</td>\n                      <td>{account.account_id}</td>\n                      <td>{account.account_balance}</td>\n                      <td>{account.createdAt}</td>\n                      <td>{account.interest_rate}</td>\n                      <td>1/2/2020</td>\n                      {account.active ? <td>Active</td> : <td>Block</td>}\n                      <td>{account.term}</td>\n                      <td>{account.maturity_date}</td>\n                      <td className=\"bt-withdraw-money\">\n                        <Button variant=\"danger\">Withdraw money</Button>\n                      </td>\n                    </tr>\n                  ) : (\n                    <div></div>\n                  )}\n                </tbody>\n              ))}\n            </Table>\n          </Tab>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default List_account;\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { changepassword } from \"../../Redux/Action/userAction\";\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\n\nfunction Change_password() {\n  const [error, setError] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = {\n      oldPass: formData.get(\"oldPassword\"),\n      newPass: formData.get(\"newPassword\"),\n    };\n    if (formData.get(\"newPassword\") !== formData.get(\"confirmPassword\")) {\n      setError(true);\n      return;\n    } else setError(false);\n    changepassword(data)\n      .then((res) => {\n        if (res.status === 200) {\n          toast.success(\"Change password successfully\");\n          window.location.replace(\"/\");\n        }\n      })\n      .catch((err) => {\n        toast.error(\"Change password unsuccessfully\");\n      });\n  };\n  return (\n    <div className=\"change_password\">\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className=\"paper\">\n          <img\n            className=\"icon-change-password\"\n            src=\"/images/change-password-icon.svg\"\n            alt=\"\"\n          ></img>\n          <Typography component=\"h1\" variant=\"h5\">\n            Change password\n          </Typography>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"oldPassword\"\n              label=\"Old Password\"\n              type=\"password\"\n              id=\"oldPassword\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"newPassword\"\n              label=\"New Password\"\n              type=\"password\"\n              id=\"newPassword\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"confirmPassword\"\n              label=\"Confirm New Password\"\n              type=\"password\"\n              id=\"confirmPassword\"\n              autoComplete=\"current-password\"\n            />\n            {error && (\n              <p className=\"error\">\n                Confirm password does not match with password\n              </p>\n            )}\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              className=\"group-btn\"\n            >\n              <Grid item xs=\"6\">\n                <Button href=\"/\" fullWidth variant=\"contained\">\n                  Back\n                </Button>\n              </Grid>\n              <Grid item xs=\"6\">\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Change\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default Change_password;\n","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./style.scss\";\nimport { get, filter } from \"lodash\";\nimport { getListAccount } from \"../../Redux/Action/userAction\";\nimport { transferMoney } from \"../../Redux/Action/paymentAction\";\nimport { toast } from \"react-toastify\";\n\nfunction Transfer() {\n  const [listAccount, setListAccount] = useState([]);\n  useEffect(() => {\n    getListAccount().then((res) => {\n      if (res.error) return;\n      const { data } = res;\n      const list = (\n        filter(\n          get(data, \"accounts\"),\n          (item) => item.account_type !== \"saving\"\n        ) || []\n      ).map((account) => account.account_id);\n      setListAccount(list);\n    });\n  }, []);\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const onSubmit = (data) => {\n    if (data.receiveBankID === window.AppConfigs.bankID) {\n      delete data.receiveBankID;\n      transferMoney(data)\n        .then((res) => {\n          if (get(res, \"data.error\")) {\n            return toast.error(get(res, \"data.error.message\"));\n          }\n          toast.success(\"Transfer successfully\");\n          reset();\n        })\n        .catch((err) => {\n          toast.error(\n            get(err, \"response.data.error\") || \"Something went wrong\"\n          );\n        });\n    } else {\n      toast.error(\"Beneficiary Bank not exist\");\n    }\n  };\n\n  const validateAmountMoney = (value) => {\n    return true;\n  };\n\n  return (\n    <div className=\"transfer-padding\">\n      <div className=\"transfer-body\">\n        <form className=\"transfer-head\" onSubmit={handleSubmit(onSubmit)}>\n          <h1 className=\"transfer-h1\">VNBC TRANSFER MONEY</h1>\n          <hr></hr>\n          <div className=\"transfer-body\">\n            <label>Select your account</label>\n            <select\n              className=\"input-field\"\n              name=\"deposit_account_id\"\n              ref={register({ required: true })}\n            >\n              {listAccount.map((account) => (\n                <option key={account} value={account}>\n                  {account}\n                </option>\n              ))}\n            </select>\n            {errors.deposit_account_id &&\n              errors.deposit_account_id.type === \"required\" && (\n                <p className=\"transfer-error\">Please enter this field!</p>\n              )}\n            <label>Beneficiary Bank ID</label>\n            <input\n              className=\"input-field\"\n              type=\"text\"\n              name=\"receiveBankID\"\n              ref={register({ required: true })}\n            />\n            {errors.receiveBankID &&\n              errors.receiveBankID.type === \"required\" && (\n                <p className=\"transfer-error\">Please enter this field!</p>\n              )}\n            <label>Beneficiary Account </label>\n            <input\n              className=\"input-field number-none-arrow\"\n              type=\"number\"\n              name=\"receive_account_id\"\n              ref={register({ required: true })}\n            />\n            {errors.receive_account_id &&\n              errors.receive_account_id.type === \"required\" && (\n                <p className=\"transfer-error\">Plese enter this field!</p>\n              )}\n            <label>Amount Of Money </label>\n            <input\n              className=\"input-field\"\n              type=\"number\"\n              min=\"10\"\n              name=\"amount\"\n              ref={register({\n                required: true,\n                validate: validateAmountMoney,\n              })}\n            />\n            {errors.amount && (\n              <p className=\"transfer-error\">Please enter this field!</p>\n            )}\n\n            <label> Message </label>\n            <textarea name=\"message\" ref={register} />\n          </div>\n          <div className=\"transfer-submit\">\n            <input type=\"submit\" value=\"S U B M I T\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Transfer;\n","import React from \"react\";\nimport \"./style.scss\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { forgotpassword } from \"../../Redux/Action/userAction\";\nimport { toast } from \"react-toastify\";\n\nfunction ForgotPassword() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = {\n      email: formData.get(\"email\"),\n    };\n    forgotpassword(data)\n      .then((res) => {\n        if (res.status === 200) {\n          toast.success(\"Send successfully\");\n          window.location.replace(\"/login\");\n        }\n      })\n      .catch((err) => {\n        toast.error(\"Send fail\");\n      });\n  };\n  return (\n    <div className=\"main-forget\">\n      <div className=\"header-forget\">\n        <h1>Forgot your password?</h1>\n        <hr></hr>\n        <h2>Enter your email address to reset your password</h2>\n      </div>\n      <div className=\"content-forget\">\n        <form onSubmit={handleSubmit} className=\"form\">\n          <div className=\"form-submit\">\n            <TextField\n              className=\"form-input\"\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type=\"email\"\n              name=\"email\"\n              label=\"Enter your email address\"\n              id=\"email\"\n              autoFocus\n            />\n            <div className=\"button\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={<Icon>send</Icon>}\n                type=\"submit\"\n              >\n                Send\n              </Button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React, { useState } from \"react\";\nimport { Button, Modal, Form, Row, Col } from \"react-bootstrap\";\nimport { get } from \"lodash\";\n\nconst UserModal = ({ show, onClose, onSave, selectedItem }) => {\n  const [status, setStatus] = useState(selectedItem.status);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const data = {\n      fullName: formData.get(\"fullName\"),\n      email: formData.get(\"email\"),\n      status: status,\n    };\n    onSave(data);\n  };\n  return (\n    <Modal show={show} onHide={onClose}>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>User Profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"2\" className=\"padding-label\">\n              Username\n            </Form.Label>\n            <Col sm=\"8\">\n              <Form.Control\n                readOnly\n                defaultValue={selectedItem.username}\n                name=\"username\"\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"2\" className=\"padding-label\">\n              Full Name\n            </Form.Label>\n            <Col sm=\"8\">\n              <Form.Control\n                defaultValue={selectedItem.fullName}\n                name=\"fullName\"\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"2\" className=\"padding-label\">\n              Identify Id\n            </Form.Label>\n            <Col sm=\"8\">\n              <Form.Control\n                readOnly\n                defaultValue={selectedItem.identity_id}\n                name=\"identifyId\"\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"2\" className=\"padding-label\">\n              Email\n            </Form.Label>\n            <Col sm=\"8\">\n              <Form.Control defaultValue={selectedItem.email} name=\"email\" />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"2\" className=\"padding-label\">\n              Identify Photo\n            </Form.Label>\n            <img\n              className=\"img-identity\"\n              src={selectedItem.identity_image_url}\n              alt=\"\"\n            ></img>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"2\" className=\"padding-label\">\n              Status\n            </Form.Label>\n            <Col sm=\"8\">\n              <Form.Control\n                as=\"select\"\n                name=\"status\"\n                value={status}\n                onChange={(e) => setStatus(get(e, \"target.value\"))}\n              >\n                <option value=\"verified\">verified</option>\n                <option value=\"unverified\">unverified</option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose} className=\"btn-close\">\n            Close\n          </Button>\n          <Button variant=\"primary\" type=\"submit\">\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UserModal;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./style.scss\";\nimport { Table, Button, Modal } from \"react-bootstrap\";\nimport { List_account as ListAccount } from \"../../Component\";\nimport { TextField } from \"@material-ui/core\";\nimport UserModal from \"./UserModal\";\nimport { getAllUser, editUser } from \"../../Redux/Action/userAction\";\nimport { get, debounce } from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nfunction User_Management() {\n  const [listUser, setListUser] = useState();\n  const [showUserProfile, setShowUserProfile] = useState(false);\n  const [showManageAccount, setShowManageAccount] = useState(false);\n  const [selectedUser, setSelectedUser] = useState({});\n  const [searchKey, setSearchKey] = useState({});\n\n  useEffect(() => {\n    debounceGetUser();\n  }, [searchKey]);\n\n  const debounceGetUser = useCallback(\n    debounce(() => {\n      getAllUser(searchKey).then((res) => {\n        res.status === 200 && setListUser(res.data);\n      });\n    }, 500),\n    [searchKey]\n  );\n\n  const onChangeSearchBox = (key, value) => {\n    setSearchKey({ ...searchKey, [key]: value });\n  };\n\n  const closeUserModal = () => setShowUserProfile(false);\n\n  const onShowUserModal = (user) => {\n    setSelectedUser(user);\n    setShowUserProfile(true);\n  };\n\n  const handleEditUser = (data) => {\n    editUser({ data, id: selectedUser.id })\n      .then((res) => {\n        toast.success(res.message);\n        setShowUserProfile(false);\n        debounceGetUser();\n      })\n      .catch((err) => {\n        toast.error(get(err, \"response.data.error\", \"Something went wrong\"));\n      });\n  };\n\n  const closeManageAccount = () => setShowManageAccount(false);\n\n  const handleShowManageAccount = (user) => {\n    setSelectedUser(user);\n    setShowManageAccount(true);\n  };\n  return (\n    <div className=\"management-padding\">\n      <div className=\"body-management\">\n        <h2>USER MANAGEMENT</h2>\n        <div className=\"search-box\">\n          <p className=\"title\">Search by: </p>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Username\"\n            name=\"username\"\n            value={searchKey.username}\n            onChange={(e) => onChangeSearchBox(\"username\", e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Identify ID\"\n            name=\"identity_id\"\n            value={searchKey.identity_id}\n            onChange={(e) => onChangeSearchBox(\"identity_id\", e.target.value)}\n          />\n        </div>\n        <Table responsive striped bordered>\n          <thead className=\"header-tab\">\n            <tr>\n              <th>USERNAME</th>\n              <th>FULL NAME</th>\n              <th>IDENTIFY ID</th>\n              <th>EMAIL</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className=\"body\">\n            {(listUser || []).map((item) => (\n              <tr>\n                <td>{item.username}</td>\n                <td>{item.fullName}</td>\n                <td>{item.identity_id}</td>\n                <td>{item.email}</td>\n                <td>\n                  <Button\n                    variant=\"primary\"\n                    className=\"btn\"\n                    onClick={() => onShowUserModal(item)}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-account\"\n                    onClick={() => handleShowManageAccount(item)}\n                  >\n                    User Accounts\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        {showUserProfile && (\n          <UserModal\n            show={showUserProfile}\n            onClose={closeUserModal}\n            onSave={handleEditUser}\n            selectedItem={selectedUser}\n          />\n        )}\n        <div className=\"modal-account\">\n          <Modal show={showManageAccount} onHide={closeManageAccount} size=\"xl\">\n            <ListAccount\n              isModal={true}\n              handleClose={closeManageAccount}\n              selectedItem={selectedUser}\n              isStaff\n            />\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default User_Management;\n","import React from \"react\";\nimport \"./index.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { isLogin } from \"./helpers/cookie\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { getStorage } from \"./helpers/localStorage\";\nimport {\n  Homepage,\n  Header,\n  Login,\n  Signup,\n  List_account,\n  Transfer,\n  ForgotPassword,\n  User_Management,\n  Change_password,\n} from \"./Component\";\n\nfunction App() {\n  const user = getStorage(\"user\");\n  return (\n    <div>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <PublicRoute path=\"/login\" exact name=\"Login\" component={Login} />\n          <PublicRoute\n            path=\"/register\"\n            exact\n            name=\"Register\"\n            component={Signup}\n          />\n          <PublicRoute\n            path=\"/forgot-password\"\n            exact\n            component={ForgotPassword}\n          />\n          <PrivateRoute path=\"/\" exact name=\"Home\" component={Homepage} />\n          <PrivateRoute path=\"/transfer\" exact component={Transfer} />\n          <PrivateRoute path=\"/account\" exact component={List_account} />\n          <PrivateRoute\n            path=\"/user/changePassword\"\n            exact\n            component={Change_password}\n          />\n          <AdminRoute\n            path=\"/user-management\"\n            exact\n            restricted={user && user.role === \"staff\"}\n            component={User_Management}\n          />\n          <Route path=\"*\">\n            <div className=\"page-404\">\n              <img src=\"/images/frame.png\" alt=\"\" />\n              <h3>Page Not Found</h3>\n            </div>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nconst AdminRoute = ({ component: Component, restricted, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? (\n          restricted ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to=\"/\" />\n          )\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { assign } from \"lodash\";\nconst initialState = {};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return assign(state, action.payload);\n    default:\n      return state;\n  }\n};\nexport default user;\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\n\nexport default combineReducers({ user });\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\ntoast.configure({\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  position: \"top-right\",\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}